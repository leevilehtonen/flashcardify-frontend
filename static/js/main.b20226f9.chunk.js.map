{"version":3,"sources":["misc/quizImages/airplane.jpg","misc/quizImages/balloon.jpg","misc/quizImages/beer.jpg","misc/quizImages/bicycle.jpg","misc/quizImages/clock.jpg","misc/quizImages/drinks.jpg","misc/quizImages/lamp.jpg","misc/quizImages/mountains-dark.jpg","misc/quizImages/mountains.jpg","misc/quizImages/neihgbourhood.jpg","misc/quizImages/planets.jpg","misc/quizImages/rocket-night-v2.jpg","misc/quizImages/rocket-night.jpg","misc/quizImages/sheep.jpg","misc/quizImages/space-earth.jpg","misc/quizImages/spaceship-night.jpg","misc/quizImages/tools.jpg","misc/quizImages/traffic.jpg","misc/quizImages/weights.jpg","misc/quizImages lazy /^/.//.*$/ groupOptions: {} namespace object","misc/Theme.js","Navigation/AppBar.js","Navigation/Drawer/DrawerList.js","Navigation/Drawer/DrawerListTop.js","Navigation/Drawer/DrawerListBottom.js","Navigation/Drawer/DrawerContent.js","Navigation/Drawer/MobileDrawer.js","Navigation/Drawer/DesktopDrawer.js","Navigation/Drawer/index.js","Navigation/index.js","services/quizzes.js","Content/FadeWrapperPage.js","Content/pages/PredictPage/AnimationStatus.js","Content/pages/PredictPage/Animation.js","Content/pages/PredictPage/PredictionStatus.js","Content/pages/PredictPage/DisplayCard.js","Content/pages/PredictPage/InputCard.js","Content/common/RatingPicker.js","Content/common/CompletionDialog.js","Content/pages/PredictPage/PredictPageContent.js","Content/pages/PredictPage/index.js","Content/common/QuizCardMedia.js","Content/common/QuizCardContent.js","Content/common/QuizCardActions.js","Content/common/QuizCardHeader.js","Content/common/QuizCard.js","Content/pages/CollectionsPage/CollectionsPageContent.js","misc/utils.js","Content/pages/CollectionsPage/index.js","Content/pages/ExplorePage/ExplorePageContent.js","Content/pages/ExplorePage/index.js","Content/common/QuizFormFlashcardsListRow.js","Content/common/QuizFormFlashcardsEditRow.js","Content/common/QuizFormFlashcardsRow.js","Content/common/QuizFormFlashcardsAddRow.js","Content/common/QuizFormFlashcards.js","misc/Difficulty.js","Content/common/ImageDialog.js","Content/common/QuizFormDetails.js","Content/common/QuizForm.js","Content/pages/NewPage/NewPageContent.js","Content/pages/NewPage/index.js","Content/pages/EditPage/EditPageContent.js","Content/pages/EditPage/index.js","Content/common/ViewRating.js","Content/common/ViewStatistics.js","Content/common/ViewFlashcardsListRow.js","Content/common/ViewFlashcardsList.js","Content/common/ViewFlashcards.js","Content/pages/ViewPage/ViewPageContent.js","Content/pages/ViewPage/index.js","Content/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./airplane.jpg","./balloon.jpg","./beer.jpg","./bicycle.jpg","./bullseye.jpg","./clock.jpg","./drinks.jpg","./lamp.jpg","./liftoff.jpg","./mountains-dark.jpg","./mountains.jpg","./neihgbourhood.jpg","./pig.jpg","./planets.jpg","./rocket-night-v2.jpg","./rocket-night.jpg","./screen.jpg","./sheep.jpg","./space-earth.jpg","./spaceship-night.jpg","./spaceship.jpg","./tools.jpg","./traffic.jpg","./weights.jpg","webpackAsyncContext","req","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","createMuiTheme","useNextVariants","palette","type","primary","main","red","A400","secondary","teal","withStyles","theme","appBar","zIndex","drawer","_ref","classes","handleMobileDrawerToggle","mobileDrawerOpen","react_default","a","createElement","AppBar","position","className","Toolbar","Hidden","mdUp","IconButton","color","aria-label","onClick","Menu_default","Typography","variant","noWrap","withRouter","items","location","List","component","item","ListItem","Link","to","selected","pathname","button","key","text","ListItemIcon","icon","ListItemText","DrawerListTop","Drawer_DrawerList","AddIcon","CollectionsIcon","ExploreIcon","DrawerListBottom","HelpIcon","SettingsIcon","autoBottom","marginBottom","toolbar","mixins","Fragment","Divider","Drawer_DrawerListTop","Drawer_DrawerListBottom","drawerPaper","width","SwipeableDrawer","anchor","open","onClose","onOpen","paper","ModalProps","keepMounted","Drawer_DrawerContent","Drawer_Drawer","Drawer","Drawer_MobileDrawer","smDown","Drawer_DesktopDrawer","Navigation","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","state","_this$state","Navigation_AppBar","Navigation_Drawer","React","Component","API_URL","concat","process","getQuizzes","asyncToGenerator","regenerator_default","mark","_callee","page","results","wrap","_context","prev","next","axios","get","params","sent","abrupt","data","stop","_x","apply","arguments","getQuiz","_ref2","_callee2","result","_context2","_x2","createQuiz","_ref3","_callee3","quiz","_context3","post","_x3","updateQuiz","_ref4","_callee4","_context4","put","_x4","_x5","getFlashcardsForQuiz","_ref6","_callee6","_context6","_x7","updateQuizTries","_ref7","_callee7","_context7","_x8","updateQuizSuccesses","_ref8","_callee8","_context8","_x9","getRatingStatsForQuiz","_ref9","_callee9","aggregate","_context9","_x10","_x11","createRatingForQuiz","_ref10","_callee10","rating","_context10","_x12","_x13","root","bottom","top","left","right","progressWrapper","display","flexDirection","alignItems","justifyContent","contentWrapper","contentComponentWrapper","margin","spacing","fetching","timeout","ProgressTransition","ContentTransition","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","progressVisible","setProgressVisible","_useState3","_useState4","contentVisible","setContentVisible","useEffect","setTimeout","in","mountOnEnter","unmountOnExit","CircularProgress","freeze","ENTER","EXIT","SHOW_QUESTION","HIDE_QUESTION","SWAP","SHOW_ANSWER","Box","posed","div","_posed$div","defineProperty","AnimationStatus","rotateY","opacity","scale","transition","duration","ease","QUESTION","ANSWER","container","height","marginTop","card","correctCard","backgroundColor","green","incorrectCard","A100","cardContent","fontSize","textAlign","_classNames","predictionStatus","flashcard","correct","animationStatus","setAnimationStatus","PredictionStatus","Animation","pose","onPoseComplete","Card","classNames","CardContent","align","gutterBottom","answer","question","textFieldInput","lineHeight","&:after","borderBottomColor","textFieldAnswer","caretColor","textColor","textFieldRawInput","textField","rightIcon","marginLeft","input","setInput","submitForm","TextField","InputProps","inputProps","rowsMax","value","onChange","target","onKeyPress","preventDefault","multiline","fullWidth","autoFocus","Button","Send_default","yellow","&:hover","fade","action","hoverOpacity","submitRating","hoverRating","setHoverRating","disabled","setDisabled","toConsumableArray","Array","onMouseEnter","index_es","content","score","withMobileDialog","breakpoint","setOpen","fullScreen","quit","tryAgain","points","Dialog","aria-labelledby","DialogTitle","style","DialogContent","DialogContentText","title","flashcards","length","common_RatingPicker","DialogActions","overflow","withSnackbar","redirect","setPredictionStatus","questionNumber","setQuestionNumber","_useState5","_useState6","setCorrect","_useState7","_useState8","setPoints","_useState9","_useState10","_useState11","_useState12","completionDialogOpen","setCompletionDialogOpen","PredictPage_DisplayCard","PredictPage_InputCard","toLowerCase","trim","checkIfCorrect","common_CompletionDialog","PredictPage","match","history","setFetching","setQuiz","fetchQuiz","objectSpread","Content_FadeWrapperPage","PredictPageContent","Fade","path","push","media","paddingTop","src","CardMedia","image","MoreVert_default","QuizCardContent","description","maxDescription","isPublic","Tooltip","placement","substring","defaultProps","QuizCardActions","actions","expander","CardActions","name","size","expand","expanded","expandOpen","toggleExpand","aria-expanded","transform","transitions","create","shortest","marginRight","styles","avatar","getUsernameLetters","username","includes","toUpperCase","letters","split","names","charAt","join","Math","min","date","CardHeader","Avatar","subheader","QuizCard","header","common_QuizCardHeader","updated","common_QuizCardMedia","common_QuizCardContent","common_QuizCardActions","progress","padding","quizzes","hasMoreQuizzes","fetchMoreQuizzes","contentRef","quizzesPerPage","visible","setVisible","lib_default","scrollableTarget","current","dataLength","hasMore","scrollThreshold","loader","Grid","justify","xs","sm","lg","xl","Zoom","transitionDelay","common_QuizCard","importImages","airplane.jpg","airplane","balloon.jpg","balloon","clock.jpg","clock","mountains-dark.jpg","mountainsDark","planets.jpg","planets","sheep.jpg","sheep","tools.jpg","tools","beer.jpg","beer","drinks.jpg","drinks","mountains.jpg","mountains","rocket-night-v2.jpg","rocketNightV2","space-earth.jpg","spaceEarth","traffic.jpg","traffic","bicycle.jpg","bicycle","lamp.jpg ","lamp","neihgbourhood.jpg","neihgbourhood","rocket-night.jpg","rocketNight","spaceship-night.jpg","spaceshipNight","weights.jpg","weights","importImage","reject","default","t0","images","CollectionsPage","setQuizzes","count","setCount","nextPage","setNextPage","fetchInitialQuizzes","assign","CollectionsPageContent","ExplorePage","ExplorePageContent","table","_ref$flashcard","handleEditClick","handleDeleteClick","onDoubleClick","handleSaveClick","newQuestion","setNewQuestion","newAnswer","setNewAnswer","updateFlashcard","label","QuizFormFlashcardsRow","edit","setEdit","show","setShow","toggleEditMode","Collapse","common_QuizFormFlashcardsEditRow","newFlashcard","common_QuizFormFlashcardsListRow","handleAddClick","questionInput","useRef","addNewFlashcard","newId","UUID","focus","inputRef","Fab","QuizFormFlashcards","setFlashcards","Paper","common_QuizFormFlashcardsRow","newFlashcards","splice","common_QuizFormFlashcardsAddRow","TRIVIAL","EASY","MEDIUM","HARD","IMPOSSIBLE","setImage","maxWidth","GridList","cellHeight","gridList","cols","GridListTile","ButtonBase","alt","headerAction","minWidth","borderRadius","avatarImage","avatarText","textShadow","cardTitle","setTitle","setDescription","difficulty","setDifficulty","setIsPublic","imageDialogOpen","setImageDialogOpen","FormControlLabel","control","Switch","checked","labelPlacement","common_ImageDialog","rows","select","SelectProps","MenuProps","menu","values","Difficulty","diff","MenuItem","grid","wrapper","buttonProgress","saving","submitText","common_QuizFormDetails","common_QuizFormFlashcards","enqueueSnackbar","_useState13","_useState14","setSaving","common_QuizForm","NewPage","NewPageContent","Grow","EditPage","EditPageContent","star","_ref$quiz","ratings","trunc","v","i","fraction","getFractionStarElement","max","toFixed","tries","successes","getDifficultyIcon","ViewFlashcardsRow","listItem","ViewFlashcardsList","ViewFlashcardsListRow","divider","common_ViewFlashcardsList","fetchFlashcards","setExpanded","undefined","common_ViewRating","common_ViewStatistics","common_ViewFlashcards","ViewPage","imageSrc","Number","ViewPageContent","flexGrow","ref","react_router","exact","render","pages_CollectionsPage","pages_ExplorePage","withTheme","react_router_dom","src_Navigation","src_Content","Boolean","window","hostname","ReactDOM","MuiThemeProvider_default","Theme","build","maxSnack","CssBaseline","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b20226f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airplane.7e2ab2ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/balloon.d84289a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beer.f9ec5e2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bicycle.e112839d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clock.25af3056.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drinks.2cc152d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lamp.d5dfedde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountains-dark.04a00cba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountains.3f0a0307.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neihgbourhood.ee62daf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planets.b3f59523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rocket-night-v2.b6675428.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rocket-night.955080de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sheep.22b6c3e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/space-earth.2b0cf644.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship-night.b22e95f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tools.2e26f41b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/traffic.f4cc9261.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weights.e34bda83.jpg\";","var map = {\n\t\"./airplane.jpg\": [\n\t\t105\n\t],\n\t\"./balloon.jpg\": [\n\t\t106\n\t],\n\t\"./beer.jpg\": [\n\t\t107\n\t],\n\t\"./bicycle.jpg\": [\n\t\t108\n\t],\n\t\"./bullseye.jpg\": [\n\t\t5515,\n\t\t3\n\t],\n\t\"./clock.jpg\": [\n\t\t109\n\t],\n\t\"./drinks.jpg\": [\n\t\t110\n\t],\n\t\"./lamp.jpg\": [\n\t\t111\n\t],\n\t\"./liftoff.jpg\": [\n\t\t5516,\n\t\t4\n\t],\n\t\"./mountains-dark.jpg\": [\n\t\t112\n\t],\n\t\"./mountains.jpg\": [\n\t\t113\n\t],\n\t\"./neihgbourhood.jpg\": [\n\t\t114\n\t],\n\t\"./pig.jpg\": [\n\t\t5517,\n\t\t5\n\t],\n\t\"./planets.jpg\": [\n\t\t115\n\t],\n\t\"./rocket-night-v2.jpg\": [\n\t\t116\n\t],\n\t\"./rocket-night.jpg\": [\n\t\t117\n\t],\n\t\"./screen.jpg\": [\n\t\t5518,\n\t\t6\n\t],\n\t\"./sheep.jpg\": [\n\t\t118\n\t],\n\t\"./space-earth.jpg\": [\n\t\t119\n\t],\n\t\"./spaceship-night.jpg\": [\n\t\t120\n\t],\n\t\"./spaceship.jpg\": [\n\t\t5519,\n\t\t7\n\t],\n\t\"./tools.jpg\": [\n\t\t121\n\t],\n\t\"./traffic.jpg\": [\n\t\t122\n\t],\n\t\"./weights.jpg\": [\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 5506;\nmodule.exports = webpackAsyncContext;","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport { red, teal } from '@material-ui/core/colors/';\n\nexport default createMuiTheme({\n  useNextVariants: true,\n  palette: {\n    type: 'light',\n    primary: {\n      main: red.A400,\n    },\n    secondary: {\n      main: teal.A400,\n    },\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\nconst TitleBar = ({ classes, handleMobileDrawerToggle, mobileDrawerOpen }) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Hidden mdUp>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={handleMobileDrawerToggle(!mobileDrawerOpen)}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Hidden>\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n        Flashcardify\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nTitleBar.propTypes = {\n  classes: PropTypes.shape(styles).isRequired,\n  handleMobileDrawerToggle: PropTypes.func.isRequired,\n  mobileDrawerOpen: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(TitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst DrawerList = ({ items, location }) => (\n  <List component=\"nav\">\n    {items.map(item => (\n      <ListItem\n        component={Link}\n        to={item.to}\n        selected={location.pathname === item.to}\n        button\n        key={item.text}\n      >\n        <ListItemIcon>\n          <item.icon />\n        </ListItemIcon>\n        <ListItemText primary={item.text} />\n      </ListItem>\n    ))}\n  </List>\n);\nDrawerList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.func,\n      text: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\nexport default withRouter(DrawerList);\n","import React from 'react';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport CollectionsIcon from '@material-ui/icons/Collections';\nimport AddIcon from '@material-ui/icons/Add';\nimport DrawerList from './DrawerList';\n\nconst DrawerListTop = () => (\n  <DrawerList\n    items={[\n      {\n        icon: AddIcon,\n        text: 'New',\n        to: '/new',\n      },\n      {\n        icon: CollectionsIcon,\n        text: 'Collections',\n        to: '/collections',\n      },\n      {\n        icon: ExploreIcon,\n        text: 'Explore',\n        to: '/explore',\n      },\n    ]}\n  />\n);\nexport default DrawerListTop;\n","import React from 'react';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DrawerList from './DrawerList';\n\nconst DrawerListBottom = () => (\n  <DrawerList\n    items={[\n      {\n        icon: HelpIcon,\n        text: 'Help',\n        to: '',\n      },\n      {\n        icon: SettingsIcon,\n        text: 'Settings',\n        to: '',\n      },\n    ]}\n  />\n);\nexport default DrawerListBottom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport DrawerListTop from './DrawerListTop';\nimport DrawerListBottom from './DrawerListBottom';\n\nconst styles = theme => ({\n  autoBottom: {\n    marginBottom: 'auto',\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nconst DrawerContent = ({ classes }) => (\n  <React.Fragment>\n    <div className={classes.toolbar} />\n    <Divider />\n    <DrawerListTop />\n    <Divider className={classes.autoBottom} />\n    <Divider />\n    <DrawerListBottom />\n  </React.Fragment>\n);\n\nDrawerContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DrawerContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { withStyles } from '@material-ui/core';\nimport DrawerContent from './DrawerContent';\n\nconst styles = {\n  drawerPaper: {\n    position: 'relative',\n    width: 240,\n  },\n};\n\nconst MobileDrawer = ({ classes, mobileDrawerOpen, handleMobileDrawerToggle }) => (\n  <SwipeableDrawer\n    variant=\"temporary\"\n    anchor=\"left\"\n    open={mobileDrawerOpen}\n    onClose={handleMobileDrawerToggle(false)}\n    onOpen={handleMobileDrawerToggle(true)}\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n    ModalProps={{\n      keepMounted: true, // Better open performance on mobile.\n    }}\n  >\n    <DrawerContent />\n  </SwipeableDrawer>\n);\n\nMobileDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  mobileDrawerOpen: PropTypes.bool.isRequired,\n  handleMobileDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(MobileDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core';\nimport DrawerContent from './DrawerContent';\n\nconst styles = {\n  drawerPaper: {\n    position: 'relative',\n    width: 240,\n  },\n};\n\nconst DesktopDrawer = ({ classes }) => (\n  <Drawer\n    variant=\"permanent\"\n    open\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n  >\n    <DrawerContent />\n  </Drawer>\n);\n\nDesktopDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DesktopDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Hidden from '@material-ui/core/Hidden';\nimport MobileDrawer from './MobileDrawer';\nimport DesktopDrawer from './DesktopDrawer';\n\nconst Drawer = ({ mobileDrawerOpen, handleMobileDrawerToggle }) => (\n  <React.Fragment>\n    <Hidden mdUp>\n      <MobileDrawer\n        mobileDrawerOpen={mobileDrawerOpen}\n        handleMobileDrawerToggle={handleMobileDrawerToggle}\n      />\n    </Hidden>\n    <Hidden smDown>\n      <DesktopDrawer />\n    </Hidden>\n  </React.Fragment>\n);\n\nDrawer.propTypes = {\n  mobileDrawerOpen: PropTypes.bool.isRequired,\n  handleMobileDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default Drawer;\n","import React from 'react';\nimport TitleBar from './AppBar';\nimport Drawer from './Drawer';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileDrawerOpen: false,\n    };\n  }\n\n  handleMobileDrawerToggle = open => () => {\n    this.setState({ mobileDrawerOpen: open });\n  };\n\n  render() {\n    const { mobileDrawerOpen, location } = this.state;\n    return (\n      <React.Fragment>\n        <TitleBar\n          mobileDrawerOpen={mobileDrawerOpen}\n          handleMobileDrawerToggle={this.handleMobileDrawerToggle}\n        />\n        <Drawer\n          mobileDrawerOpen={mobileDrawerOpen}\n          handleMobileDrawerToggle={this.handleMobileDrawerToggle}\n          location={location}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navigation;\n","import axios from 'axios';\n\nconst API_URL =\n  `https://${process.env.REACT_APP_QUIZ_API_URL}/api/quizzes` || 'http://localhost:3001/api/quizzes';\n\nexport const getQuizzes = async page => {\n  const results = await axios.get(`${API_URL}`, { params: { page } });\n  return results.data;\n};\nexport const getQuiz = async id => {\n  const result = await axios.get(`${API_URL}/${id}`);\n  return result.data;\n};\nexport const createQuiz = async quiz => {\n  const result = await axios.post(`${API_URL}`, quiz);\n  return result.data;\n};\nexport const updateQuiz = async (id, quiz) => {\n  const result = await axios.put(`${API_URL}/${id}`, quiz);\n  return result.data;\n};\nexport const deleteQuiz = async id => {\n  const result = await axios.delete(`${API_URL}/${id}`);\n  return result.data;\n};\n\nexport const getFlashcardsForQuiz = async id => {\n  const result = await axios.get(`${API_URL}/${id}/flashcards`);\n  return result.data;\n};\n\nexport const updateQuizTries = async id => {\n  const result = await axios.post(`${API_URL}/${id}/tries`);\n  return result.data;\n};\nexport const updateQuizSuccesses = async id => {\n  const result = await axios.post(`${API_URL}/${id}/successes`);\n  return result.data;\n};\nexport const getRatingStatsForQuiz = async (id, aggregate) => {\n  const result = await axios.post(`${API_URL}/${id}/ratings/stats`, { aggregate });\n  return result.data;\n};\nexport const createRatingForQuiz = async (id, rating) => {\n  const result = await axios.post(`${API_URL}/${id}/ratings`, { rating });\n  return result.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, CircularProgress } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    bottom: 0,\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  progressWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  contentWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  contentComponentWrapper: {\n    margin: theme.spacing(3),\n  },\n});\n\nconst FadeWrapperPage = ({\n  classes,\n  fetching,\n  timeout,\n  ProgressTransition,\n  ContentTransition,\n  Component,\n  ...props\n}) => {\n  const [progressVisible, setProgressVisible] = useState(false);\n  const [contentVisible, setContentVisible] = useState(false);\n\n  useEffect(() => {\n    if (fetching) {\n      setContentVisible(false);\n      setTimeout(() => {\n        setProgressVisible(true);\n      }, timeout);\n    } else {\n      setProgressVisible(false);\n      setTimeout(() => {\n        setContentVisible(true);\n      }, timeout);\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.progressWrapper}>\n        <ProgressTransition in={progressVisible} mountOnEnter unmountOnExit timeout={timeout}>\n          <CircularProgress />\n        </ProgressTransition>\n      </div>\n      <div className={classes.contentWrapper}>\n        <ContentTransition in={contentVisible} mountOnEnter unmountOnExit timeout={timeout}>\n          <div className={classes.contentComponentWrapper}>\n            <Component {...props} />\n          </div>\n        </ContentTransition>\n      </div>\n    </div>\n  );\n};\n\nFadeWrapperPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetching: PropTypes.bool.isRequired,\n  timeout: PropTypes.number.isRequired,\n  ProgressTransition: PropTypes.func.isRequired,\n  ContentTransition: PropTypes.func.isRequired,\n  Component: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(FadeWrapperPage);\n","export default Object.freeze({\n  ENTER: 'enter',\n  EXIT: 'exit',\n  SHOW_QUESTION: 'showQuestion',\n  HIDE_QUESTION: 'hideQuestion',\n  SWAP: 'swap',\n  SHOW_ANSWER: 'showAnswer',\n});\n","import posed from 'react-pose';\nimport AnimationStatus from './AnimationStatus';\n\nconst Box = posed.div({\n  [AnimationStatus.ENTER]: {\n    rotateY: 0,\n    opacity: 1,\n    scale: 0.01,\n    transition: {\n      duration: 0,\n    },\n  },\n  [AnimationStatus.EXIT]: {\n    rotateY: 0,\n    opacity: 0,\n    scale: 2,\n    transition: {\n      duration: 300,\n    },\n  },\n  [AnimationStatus.SHOW_QUESTION]: {\n    rotateY: 0,\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 300,\n    },\n  },\n  [AnimationStatus.HIDE_QUESTION]: {\n    rotateY: 90,\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 300,\n      ease: 'easeOut',\n    },\n  },\n  [AnimationStatus.SWAP]: {\n    rotateY: -90,\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0,\n      ease: 'linear',\n    },\n  },\n  [AnimationStatus.SHOW_ANSWER]: {\n    rotateY: 0,\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 300,\n      ease: 'easeOut',\n    },\n  },\n});\n\nexport default Box;\n","export default Object.freeze({\n  QUESTION: 'question',\n  ANSWER: 'answer',\n});\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport { red, green } from '@material-ui/core/colors';\nimport Animation from './Animation';\nimport PredictionStatus from './PredictionStatus';\nimport AnimationStatus from './AnimationStatus';\n\nconst styles = theme => ({\n  container: {\n    width: '70vmin',\n    height: '65%',\n    marginBottom: 'auto',\n    marginTop: theme.spacing(4),\n  },\n  card: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  correctCard: {\n    backgroundColor: green.A400,\n  },\n  incorrectCard: {\n    backgroundColor: red.A100,\n  },\n  cardContent: {\n    margin: 'auto',\n  },\n  text: {\n    fontSize: '2.5vmax',\n    textAlign: 'center',\n  },\n});\n\nconst DisplayCard = ({ classes, predictionStatus, flashcard, correct }) => {\n  const [animationStatus, setAnimationStatus] = useState(AnimationStatus.ENTER);\n\n  useEffect(() => {\n    setAnimationStatus(AnimationStatus.SHOW_QUESTION);\n  }, []);\n\n  useEffect(() => {\n    if (\n      predictionStatus === PredictionStatus.ANSWER &&\n      animationStatus === AnimationStatus.SHOW_QUESTION\n    ) {\n      setAnimationStatus(AnimationStatus.HIDE_QUESTION);\n    } else if (\n      predictionStatus === PredictionStatus.QUESTION &&\n      animationStatus === AnimationStatus.SHOW_ANSWER\n    ) {\n      setAnimationStatus(AnimationStatus.EXIT);\n    }\n  }, [predictionStatus]);\n\n  const onPoseComplete = () => {\n    switch (animationStatus) {\n      case AnimationStatus.ENTER:\n        setAnimationStatus(AnimationStatus.SHOW_QUESTION);\n        break;\n      case AnimationStatus.EXIT:\n        setAnimationStatus(AnimationStatus.ENTER);\n        break;\n      case AnimationStatus.HIDE_QUESTION:\n        setAnimationStatus(AnimationStatus.SWAP);\n        break;\n      case AnimationStatus.SWAP:\n        setAnimationStatus(AnimationStatus.SHOW_ANSWER);\n        break;\n      default:\n    }\n  };\n\n  const getCardText = () => {\n    if (animationStatus === AnimationStatus.SHOW_ANSWER) {\n      return flashcard.answer;\n    }\n    if (\n      animationStatus === AnimationStatus.SHOW_QUESTION ||\n      animationStatus === AnimationStatus.ENTER ||\n      animationStatus === AnimationStatus.HIDE_QUESTION\n    ) {\n      return flashcard.question;\n    }\n    return '';\n  };\n\n  return (\n    <Animation className={classes.container} pose={animationStatus} onPoseComplete={onPoseComplete}>\n      <Card\n        className={classNames(classes.card, {\n          [classes.correctCard]: animationStatus === AnimationStatus.SHOW_ANSWER && correct,\n          [classes.incorrectCard]: animationStatus === AnimationStatus.SHOW_ANSWER && !correct,\n        })}\n      >\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.text} variant=\"h5\" align=\"center\" gutterBottom>\n            {getCardText()}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Animation>\n  );\n};\n\nDisplayCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  flashcard: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n  }).isRequired,\n  correct: PropTypes.bool.isRequired,\n  predictionStatus: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DisplayCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport { withStyles, Button } from '@material-ui/core';\nimport PredictionStatus from './PredictionStatus';\n\nconst styles = theme => ({\n  card: {\n    marginBottom: theme.spacing(4),\n    marginTop: 'auto',\n    width: '70vmin',\n  },\n  textFieldInput: {\n    lineHeight: '180%',\n    fontSize: '1.8vmax',\n    '&:after': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  textFieldAnswer: {\n    caretColor: 'transparent',\n    textColor: 'rgba(0,0,0,0.38)',\n  },\n  textFieldRawInput: {\n    textAlign: 'center',\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n});\n\nconst InputCard = ({ classes, input, setInput, submitForm, predictionStatus }) => (\n  <Card className={classes.card}>\n    <CardContent>\n      <TextField\n        InputProps={{\n          className: classes.textFieldInput,\n          inputProps: { className: classes.textFieldRawInput },\n        }}\n        className={classNames(classes.textField, {\n          [classes.textFieldAnswer]: predictionStatus === PredictionStatus.ANSWER,\n        })}\n        rowsMax={2}\n        value={input}\n        onChange={e =>\n          predictionStatus === PredictionStatus.QUESTION ? setInput(e.target.value) : null\n        }\n        onKeyPress={e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            submitForm();\n          }\n        }}\n        multiline\n        fullWidth\n        autoFocus\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        fullWidth\n        className={classes.button}\n        onClick={() => submitForm()}\n      >\n        {predictionStatus === PredictionStatus.QUESTION ? 'Submit' : 'Next'}\n        <SendIcon className={classes.rightIcon} />\n      </Button>\n    </CardContent>\n  </Card>\n);\n\nInputCard.propTypes = {\n  classes: PropTypes.shape(styles).isRequired,\n  input: PropTypes.string.isRequired,\n  predictionStatus: PropTypes.string.isRequired,\n  setInput: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(InputCard);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { yellow } from '@material-ui/core/colors';\nimport { Star, StarBorder } from '@material-ui/icons';\nimport { withStyles, IconButton } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  button: {\n    color: yellow[600],\n    '&:hover': {\n      backgroundColor: fade(yellow[600], theme.palette.action.hoverOpacity),\n    },\n  },\n});\n\nconst RatingPicker = ({ classes, submitRating }) => {\n  const [hoverRating, setHoverRating] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n\n  return (\n    <div>\n      {[...Array(5)].map((item, id) => (\n        <IconButton\n          // eslint-disable-next-line react/no-array-index-key\n          key={id + 1}\n          className={classes.button}\n          onMouseEnter={() => setHoverRating(id + 1)}\n          onClick={() => {\n            setDisabled(true);\n            submitRating(id + 1);\n          }}\n          disabled={disabled}\n          aria-label=\"Set rating\"\n        >\n          {id + 1 <= hoverRating ? <Star fontSize=\"large\" /> : <StarBorder fontSize=\"large\" />}\n        </IconButton>\n      ))}\n    </div>\n  );\n};\n\nRatingPicker.propTypes = {\n  classes: PropTypes.object.isRequired,\n  submitRating: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(RatingPicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  withStyles,\n  DialogActions,\n  DialogContentText,\n  Button,\n  withMobileDialog,\n  Typography,\n} from '@material-ui/core';\nimport RatingPicker from './RatingPicker';\n\nconst styles = theme => ({\n  text: {\n    marginBottom: theme.spacing(1),\n  },\n  content: {\n    textAlign: 'center',\n  },\n  score: {\n    color: 'rgba(0, 0, 0, 0.54)',\n    marginBottom: theme.spacing(3),\n  },\n});\n\nconst CompletionDialog = ({\n  classes,\n  quiz,\n  open,\n  setOpen,\n  fullScreen,\n  quit,\n  tryAgain,\n  points,\n  submitRating,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"form-dialog-completion\"\n      fullScreen={fullScreen}\n    >\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: fullScreen ? 'center' : '' }}>\n        Completed\n      </DialogTitle>\n      <DialogContent className={classes.content} style={{ marginTop: fullScreen ? '50%' : '' }}>\n        <DialogContentText className={classes.text}>\n          You have completed <b>{quiz.title}</b> -quiz with points\n        </DialogContentText>\n        <Typography className={classes.score} variant=\"h2\">\n          {points}/{quiz.flashcards.length}\n        </Typography>\n        <DialogContentText className={classes.text}>\n          Please rate the quiz based on your experience\n        </DialogContentText>\n        <RatingPicker submitRating={submitRating} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={quit} color=\"primary\">\n          Quit\n        </Button>\n        <Button onClick={tryAgain} color=\"primary\">\n          Try again\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCompletionDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  quiz: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  fullScreen: PropTypes.bool.isRequired,\n  quit: PropTypes.func.isRequired,\n  tryAgain: PropTypes.func.isRequired,\n  points: PropTypes.number.isRequired,\n  submitRating: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(withMobileDialog({ breakpoint: 'xs' })(CompletionDialog));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { withSnackbar } from 'notistack';\nimport DisplayCard from './DisplayCard';\nimport InputCard from './InputCard';\nimport CompletionDialog from '../../common/CompletionDialog';\nimport PredictionStatus from './PredictionStatus';\nimport {\n  updateQuizSuccesses,\n  updateQuizTries,\n  createRatingForQuiz,\n} from '../../../services/quizzes';\n\nconst styles = {\n  root: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n};\n\nconst PredictPageContent = ({ quiz, classes, redirect }) => {\n  const [predictionStatus, setPredictionStatus] = useState(PredictionStatus.QUESTION);\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [correct, setCorrect] = useState(true);\n  const [points, setPoints] = useState(0);\n  const [input, setInput] = useState('');\n  const [completionDialogOpen, setCompletionDialogOpen] = useState(false);\n\n  const checkIfCorrect = () => {\n    const result =\n      quiz.flashcards[questionNumber].answer.toLowerCase().trim() === input.toLowerCase();\n    setCorrect(result);\n    if (result) {\n      setPoints(points + 1);\n    }\n  };\n\n  const isLastFlashcard = () => quiz.flashcards.length - 1 === questionNumber;\n\n  const nextFlashcard = () => {\n    setInput('');\n    setPredictionStatus(PredictionStatus.QUESTION);\n    setTimeout(() => {\n      setQuestionNumber(questionNumber + 1);\n    }, 300);\n  };\n\n  const completionDialogQuit = () => {\n    setCompletionDialogOpen(false);\n    redirect('/collections');\n  };\n\n  const completionDialogTryAgain = () => {\n    setCompletionDialogOpen(false);\n    updateQuizTries(quiz.id);\n    setTimeout(() => {\n      setPredictionStatus(PredictionStatus.QUESTION);\n      setQuestionNumber(0);\n      setInput('');\n      setCorrect(true);\n      setPoints(0);\n    }, 300);\n  };\n\n  const submitForm = () => {\n    if (predictionStatus === PredictionStatus.QUESTION) {\n      checkIfCorrect();\n      setPredictionStatus(PredictionStatus.ANSWER);\n    } else if (isLastFlashcard()) {\n      setCompletionDialogOpen(true);\n      updateQuizSuccesses(quiz.id);\n    } else {\n      nextFlashcard();\n    }\n  };\n\n  const submitRating = async rating => {\n    await createRatingForQuiz(quiz.id, rating);\n  };\n\n  return (\n    <div className={classes.root}>\n      <DisplayCard\n        predictionStatus={predictionStatus}\n        correct={correct}\n        flashcard={quiz.flashcards[questionNumber]}\n      />\n      <InputCard\n        input={input}\n        setInput={setInput}\n        submitForm={submitForm}\n        predictionStatus={predictionStatus}\n      />\n      <CompletionDialog\n        quiz={quiz}\n        open={completionDialogOpen}\n        setOpen={setCompletionDialogOpen}\n        quit={completionDialogQuit}\n        tryAgain={completionDialogTryAgain}\n        points={points}\n        submitRating={submitRating}\n      />\n    </div>\n  );\n};\n\nPredictPageContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  quiz: PropTypes.object.isRequired,\n  redirect: PropTypes.func.isRequired,\n  // enqueueSnackbar: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(withSnackbar(PredictPageContent));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from '@material-ui/core';\nimport { getQuiz, updateQuizTries, getFlashcardsForQuiz } from '../../../services/quizzes';\nimport FadeWrapperPage from '../../FadeWrapperPage';\nimport PredictPageContent from './PredictPageContent';\n\nconst PredictPage = ({ match, history }) => {\n  const [fetching, setFetching] = useState(true);\n  const [quiz, setQuiz] = useState({});\n\n  const fetchQuiz = async () => {\n    const result = await Promise.all([\n      getQuiz(match.params.id),\n      getFlashcardsForQuiz(match.params.id),\n      updateQuizTries(match.params.id),\n    ]);\n    setQuiz({ ...result[0], flashcards: result[1] });\n    setFetching(false);\n  };\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n  return (\n    <FadeWrapperPage\n      Component={PredictPageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Fade}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      quiz={quiz}\n      redirect={path => history.push(path)}\n    />\n  );\n};\n\nPredictPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\nexport default PredictPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = {\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n};\n\nconst QuizCardMedia = ({ classes, src }) => (\n  <CardMedia\n    className={classes.media}\n    image={src}\n    action={\n      <IconButton>\n        <MoreVertIcon />\n      </IconButton>\n    }\n  />\n);\n\nQuizCardMedia.propTypes = {\n  classes: PropTypes.object.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(QuizCardMedia);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Public } from '@material-ui/icons';\nimport { Tooltip } from '@material-ui/core';\n\nconst QuizCardContent = ({ title, description, maxDescription, isPublic }) => (\n  <CardContent>\n    <Typography gutterBottom variant=\"h5\">\n      {title}{' '}\n      {isPublic ? (\n        <Tooltip title=\"Public\" placement=\"right\">\n          <Public color=\"action\" />\n        </Tooltip>\n      ) : (\n        ''\n      )}\n    </Typography>\n    <Typography>\n      {description.length > maxDescription\n        ? `${description.substring(0, maxDescription).trim()}...`\n        : description.trim()}\n    </Typography>\n  </CardContent>\n);\n\nQuizCardContent.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  isPublic: PropTypes.bool.isRequired,\n  maxDescription: PropTypes.number,\n};\n\nQuizCardContent.defaultProps = {\n  maxDescription: 100,\n};\n\nexport default QuizCardContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { IconButton, withStyles } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\n\nconst styles = theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nconst QuizCardActions = ({ classes, actions, expander }) => (\n  <CardActions>\n    {actions.map(({ name, color, action, variant, fullWidth, size }) => (\n      <Button\n        key={name}\n        size={size || 'small'}\n        variant={variant || 'text'}\n        fullWidth={fullWidth}\n        color={color}\n        className={!fullWidth ? classes.button : ''}\n        onClick={() => action()}\n      >\n        {name}\n      </Button>\n    ))}\n    {expander && (\n      <IconButton\n        className={classes.expand + (expander.expanded ? ` ${classes.expandOpen}` : '')}\n        onClick={() => expander.toggleExpand()}\n        aria-expanded={expander.expanded}\n        aria-label=\"Show more\"\n      >\n        <ExpandMore />\n      </IconButton>\n    )}\n  </CardActions>\n);\n\nQuizCardActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n      action: PropTypes.func.isRequired,\n      variant: PropTypes.string,\n      fullWidth: PropTypes.bool,\n      size: PropTypes.string,\n    })\n  ).isRequired,\n\n  expander: PropTypes.oneOfType([\n    PropTypes.shape({\n      toggleExpand: PropTypes.func,\n      expanded: PropTypes.bool,\n    }),\n    PropTypes.bool,\n  ]),\n};\n\nQuizCardActions.defaultProps = {\n  expander: false,\n};\n\nexport default withStyles(styles)(QuizCardActions);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = {\n  avatar: {\n    backgroundColor: green.A400,\n  },\n};\n\nconst getUsernameLetters = username => {\n  if (!username.includes(' ')) {\n    return username.substring(0, 2).toUpperCase();\n  }\n  const letters = username\n    .split(' ')\n    .map(names => names.charAt(0))\n    .join('');\n  return letters.substring(0, Math.min(letters.length, 2));\n};\n\nconst QuizCardHeader = ({ classes, username, date }) => (\n  <CardHeader\n    avatar={\n      <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n        {getUsernameLetters(username)}\n      </Avatar>\n    }\n    action={\n      <IconButton>\n        <MoreVertIcon />\n      </IconButton>\n    }\n    title={username}\n    subheader={date}\n  />\n);\n\nQuizCardHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  username: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(QuizCardHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '@material-ui/core';\nimport QuizCardMedia from './QuizCardMedia';\nimport QuizCardContent from './QuizCardContent';\nimport QuizCardActions from './QuizCardActions';\nimport QuizCardHeader from './QuizCardHeader';\n\nconst QuizCard = ({ quiz, actions, header }) => {\n  return (\n    <Card>\n      {header && <QuizCardHeader username={quiz.title} date={quiz.updated} />}\n      <QuizCardMedia src={quiz.image} />\n      <QuizCardContent title={quiz.title} description={quiz.description} isPublic={quiz.isPublic} />\n      <QuizCardActions actions={actions} />\n    </Card>\n  );\n};\n\nQuizCard.propTypes = {\n  quiz: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  actions: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  header: PropTypes.bool,\n};\n\nQuizCard.defaultProps = {\n  header: false,\n};\n\nexport default QuizCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Zoom, Grid, withStyles, CircularProgress } from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport QuizCard from '../../common/QuizCard';\n\nconst styles = theme => ({\n  progress: {\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(6),\n    textAlign: 'center',\n  },\n});\n\nconst CollectionsPageContent = ({\n  redirect,\n  quizzes,\n  hasMoreQuizzes,\n  fetchMoreQuizzes,\n  contentRef,\n  quizzesPerPage,\n  classes,\n}) => {\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    setVisible(true);\n  }, []);\n\n  const actions = id => [\n    {\n      name: 'Open',\n      color: 'primary',\n      variant: 'contained',\n      fullWidth: true,\n      action: () => {\n        redirect(`/view/${id}`);\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <InfiniteScroll\n        scrollableTarget={contentRef.current}\n        dataLength={quizzes.length} // This is important field to render the next data\n        next={fetchMoreQuizzes}\n        hasMore={hasMoreQuizzes}\n        scrollThreshold={0.95}\n        style={{ overflow: 'hidden' }}\n        loader={\n          <div className={classes.progress}>\n            <CircularProgress />\n          </div>\n        }\n      >\n        <Grid container justify=\"flex-start\" spacing={3}>\n          {quizzes.map((quiz, id) => (\n            <Grid key={quiz.id} item xs={12} sm={6} lg={4} xl={3}>\n              <Zoom\n                timeout={600}\n                in={visible}\n                style={{ transitionDelay: `${id % quizzesPerPage}00ms` }}\n              >\n                <div>\n                  <QuizCard quiz={quiz} actions={actions(quiz.id)} />\n                </div>\n              </Zoom>\n            </Grid>\n          ))}\n        </Grid>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nCollectionsPageContent.propTypes = {\n  redirect: PropTypes.func.isRequired,\n  quizzes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  hasMoreQuizzes: PropTypes.bool.isRequired,\n  fetchMoreQuizzes: PropTypes.func.isRequired,\n  contentRef: PropTypes.object.isRequired,\n  quizzesPerPage: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CollectionsPageContent);\n\n/*\n <Zoom\n                in={visible}\n                // style={{ transitionDelay: `${(id % (quizzesPerPage - 1)) * 5}0ms` }}\n              >\n                <div>\n                  <QuizCard quiz={quiz} actions={actions(quiz.id)} />\n                </div>\n              </Zoom>\n*/\n\n/*\n <InfiniteScroll\n        loadMore={fetchMoreQuizzes}\n        hasMore={hasMoreQuizzes}\n        useWindow={false}\n        getScrollParent={() => contentRef.current}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n*/\n","import airplane from './quizImages/airplane.jpg';\nimport balloon from './quizImages/balloon.jpg';\nimport beer from './quizImages/beer.jpg';\nimport bicycle from './quizImages/bicycle.jpg';\nimport clock from './quizImages/clock.jpg';\nimport drinks from './quizImages/drinks.jpg';\nimport lamp from './quizImages/lamp.jpg';\nimport mountainsDark from './quizImages/mountains-dark.jpg';\nimport mountains from './quizImages/mountains.jpg';\nimport neihgbourhood from './quizImages/neihgbourhood.jpg';\nimport planets from './quizImages/planets.jpg';\nimport rocketNightV2 from './quizImages/rocket-night-v2.jpg';\nimport rocketNight from './quizImages/rocket-night.jpg';\nimport sheep from './quizImages/sheep.jpg';\nimport spaceEarth from './quizImages/space-earth.jpg';\nimport spaceshipNight from './quizImages/spaceship-night.jpg';\nimport tools from './quizImages/tools.jpg';\nimport traffic from './quizImages/traffic.jpg';\nimport weights from './quizImages/weights.jpg';\n\nexport const importImages = () => ({\n  'airplane.jpg': airplane,\n  'balloon.jpg': balloon,\n  'clock.jpg': clock,\n  'mountains-dark.jpg': mountainsDark,\n  'planets.jpg': planets,\n  'sheep.jpg': sheep,\n  'tools.jpg': tools,\n  'beer.jpg': beer,\n  'drinks.jpg': drinks,\n  'mountains.jpg': mountains,\n  'rocket-night-v2.jpg': rocketNightV2,\n  'space-earth.jpg': spaceEarth,\n  'traffic.jpg': traffic,\n  'bicycle.jpg': bicycle,\n  'lamp.jpg ': lamp,\n  'neihgbourhood.jpg': neihgbourhood,\n  'rocket-night.jpg': rocketNight,\n  'spaceship-night.jpg': spaceshipNight,\n  'weights.jpg': weights,\n});\n\nexport const importImage = async name =>\n  new Promise(async (resolve, reject) => {\n    try {\n      const result = await import(`./quizImages/${name}`);\n      resolve(result.default);\n    } catch (error) {\n      reject(error);\n    }\n  });\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from '@material-ui/core';\nimport FadeWrapperPage from '../../FadeWrapperPage';\nimport CollectionsPageContent from './CollectionsPageContent';\nimport { getQuizzes } from '../../../services/quizzes';\nimport { importImages } from '../../../misc/utils';\n\nconst images = importImages();\n\nconst CollectionsPage = ({ history, contentRef }) => {\n  const [fetching, setFetching] = useState(true);\n  const [quizzes, setQuizzes] = useState([]);\n  const [count, setCount] = useState(0);\n  const [nextPage, setNextPage] = useState(1);\n  const quizzesPerPage = 12;\n\n  const fetchInitialQuizzes = async () => {\n    setFetching(true);\n    const results = await getQuizzes(0, quizzesPerPage);\n    results[0] = results[0].map(quiz => Object.assign({}, quiz, { image: images[quiz.image] }));\n    setQuizzes(results[0]);\n    setCount(results[1]);\n    setFetching(false);\n  };\n\n  const fetchMoreQuizzes = async () => {\n    const results = await getQuizzes(nextPage, quizzesPerPage);\n    results[0] = results[0].map(quiz => Object.assign({}, quiz, { image: images[quiz.image] }));\n    setNextPage(nextPage + 1);\n    setQuizzes(quizzes.concat(results[0]));\n  };\n\n  useEffect(() => {\n    fetchInitialQuizzes();\n  }, []);\n\n  return (\n    <FadeWrapperPage\n      Component={CollectionsPageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Fade}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      redirect={path => history.push(path)}\n      quizzes={quizzes}\n      fetchMoreQuizzes={fetchMoreQuizzes}\n      hasMoreQuizzes={quizzes.length < count}\n      contentRef={contentRef}\n      quizzesPerPage={quizzesPerPage}\n    />\n  );\n};\n\nCollectionsPage.propTypes = {\n  history: PropTypes.object.isRequired,\n  contentRef: PropTypes.object.isRequired,\n};\nexport default CollectionsPage;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Zoom, Grid, withStyles, CircularProgress } from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport QuizCard from '../../common/QuizCard';\n\nconst styles = theme => ({\n  progress: {\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(6),\n    textAlign: 'center',\n  },\n});\n\nconst ExplorePageContent = ({\n  redirect,\n  quizzes,\n  hasMoreQuizzes,\n  fetchMoreQuizzes,\n  contentRef,\n  quizzesPerPage,\n  classes,\n}) => {\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    setVisible(true);\n  }, []);\n\n  const actions = id => [\n    {\n      name: 'Open',\n      color: 'primary',\n      variant: 'contained',\n      fullWidth: true,\n      action: () => {\n        redirect(`/view/${id}`);\n      },\n    },\n    {\n      name: 'Add',\n      color: 'primary',\n      fullWidth: true,\n      action: () => {\n        redirect(`/view/${id}`);\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <InfiniteScroll\n        scrollableTarget={contentRef.current}\n        dataLength={quizzes.length} // This is important field to render the next data\n        next={fetchMoreQuizzes}\n        hasMore={hasMoreQuizzes}\n        scrollThreshold={0.95}\n        style={{ overflow: 'hidden' }}\n        loader={\n          <div className={classes.progress}>\n            <CircularProgress />\n          </div>\n        }\n      >\n        <Grid container justify=\"flex-start\" spacing={3}>\n          {quizzes.map((quiz, id) => (\n            <Grid key={quiz.id} item xs={12} sm={6} lg={4} xl={3}>\n              <Zoom\n                timeout={600}\n                in={visible}\n                style={{ transitionDelay: `${id % quizzesPerPage}00ms` }}\n              >\n                <div>\n                  <QuizCard quiz={quiz} actions={actions(quiz.id)} header />\n                </div>\n              </Zoom>\n            </Grid>\n          ))}\n        </Grid>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nExplorePageContent.propTypes = {\n  redirect: PropTypes.func.isRequired,\n  quizzes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  hasMoreQuizzes: PropTypes.bool.isRequired,\n  fetchMoreQuizzes: PropTypes.func.isRequired,\n  contentRef: PropTypes.object.isRequired,\n  quizzesPerPage: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExplorePageContent);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from '@material-ui/core';\nimport FadeWrapperPage from '../../FadeWrapperPage';\nimport ExplorePageContent from './ExplorePageContent';\nimport { getQuizzes } from '../../../services/quizzes';\nimport { importImages } from '../../../misc/utils';\n\nconst images = importImages();\n\nconst ExplorePage = ({ history, contentRef }) => {\n  const [fetching, setFetching] = useState(true);\n  const [quizzes, setQuizzes] = useState([]);\n  const [count, setCount] = useState(0);\n  const [nextPage, setNextPage] = useState(1);\n  const quizzesPerPage = 12;\n\n  const fetchInitialQuizzes = async () => {\n    setFetching(true);\n    const results = await getQuizzes(0, quizzesPerPage);\n    results[0] = results[0].map(quiz => Object.assign({}, quiz, { image: images[quiz.image] }));\n    setQuizzes(results[0]);\n    setCount(results[1]);\n    setFetching(false);\n  };\n\n  const fetchMoreQuizzes = async () => {\n    const results = await getQuizzes(nextPage, quizzesPerPage);\n    results[0] = results[0].map(quiz => Object.assign({}, quiz, { image: images[quiz.image] }));\n    setNextPage(nextPage + 1);\n    setQuizzes(quizzes.concat(results[0]));\n  };\n\n  useEffect(() => {\n    fetchInitialQuizzes();\n  }, []);\n\n  return (\n    <FadeWrapperPage\n      Component={ExplorePageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Fade}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      redirect={path => history.push(path)}\n      quizzes={quizzes}\n      fetchMoreQuizzes={fetchMoreQuizzes}\n      hasMoreQuizzes={quizzes.length < count}\n      contentRef={contentRef}\n      quizzesPerPage={quizzesPerPage}\n    />\n  );\n};\n\nExplorePage.propTypes = {\n  history: PropTypes.object.isRequired,\n  contentRef: PropTypes.object.isRequired,\n};\nexport default ExplorePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Grid, IconButton, withStyles } from '@material-ui/core';\nimport { Edit, Delete } from '@material-ui/icons';\n\nconst styles = () => ({\n  root: {},\n  table: {},\n  textField: {\n    width: '100%',\n  },\n  button: {\n    marginLeft: 'auto',\n  },\n  input: {\n    width: '100%',\n  },\n});\n\nconst QuizFormFlashcardsListRow = ({\n  classes,\n  count,\n  flashcard: { question, answer },\n  handleEditClick,\n  handleDeleteClick,\n}) => (\n  <React.Fragment>\n    <Grid item xs={1}>\n      <Typography variant=\"body1\" gutterBottom>\n        {count}\n      </Typography>\n    </Grid>\n    <Grid item xs={5} onDoubleClick={handleEditClick}>\n      <Typography variant=\"body1\" gutterBottom>\n        {question}\n      </Typography>\n    </Grid>\n    <Grid item xs onDoubleClick={handleEditClick}>\n      <Typography variant=\"body1\" gutterBottom>\n        {answer}\n      </Typography>\n    </Grid>\n    <Grid item>\n      <IconButton\n        color=\"secondary\"\n        className={classes.button}\n        aria-label=\"Edit\"\n        onClick={handleEditClick}\n      >\n        <Edit fontSize=\"small\" />\n      </IconButton>\n      <IconButton\n        color=\"primary\"\n        className={classes.button}\n        aria-label=\"Delete\"\n        onClick={handleDeleteClick}\n      >\n        <Delete fontSize=\"small\" />\n      </IconButton>\n    </Grid>\n  </React.Fragment>\n);\n\nQuizFormFlashcardsListRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  flashcard: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n  }).isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuizFormFlashcardsListRow);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, IconButton, TextField, withStyles } from '@material-ui/core';\nimport { Save } from '@material-ui/icons';\n\nconst styles = () => ({\n  textField: {\n    width: '100%',\n  },\n  button: {\n    marginLeft: 'auto',\n  },\n});\n\nconst QuizFormFlashcardsEditRow = ({ classes, flashcard, handleSaveClick }) => {\n  const [newQuestion, setNewQuestion] = useState(flashcard.question);\n  const [newAnswer, setNewAnswer] = useState(flashcard.answer);\n\n  const updateFlashcard = () => {\n    if (newQuestion !== '' && newAnswer !== '') {\n      handleSaveClick(Object.assign({}, flashcard, { question: newQuestion, answer: newAnswer }));\n      setNewQuestion('');\n      setNewAnswer('');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs>\n        <TextField\n          id=\"outlined-dense\"\n          label=\"Modify question\"\n          value={newQuestion}\n          onKeyPress={e => (e.key === 'Enter' ? updateFlashcard() : '')}\n          onChange={e => setNewQuestion(e.target.value)}\n          className={classes.textField}\n          margin=\"dense\"\n          variant=\"outlined\"\n        />\n      </Grid>\n      <Grid item xs>\n        <TextField\n          id=\"outlined-dense\"\n          label=\"Modify answer\"\n          value={newAnswer}\n          onKeyPress={e => (e.key === 'Enter' ? updateFlashcard() : '')}\n          onChange={e => setNewAnswer(e.target.value)}\n          className={classes.textField}\n          margin=\"dense\"\n          variant=\"outlined\"\n        />\n      </Grid>\n      <Grid item>\n        <IconButton\n          color=\"primary\"\n          className={classes.button}\n          aria-label=\"Save\"\n          onClick={updateFlashcard}\n        >\n          <Save fontSize=\"small\" />\n        </IconButton>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nQuizFormFlashcardsEditRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  flashcard: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n  }).isRequired,\n  handleSaveClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuizFormFlashcardsEditRow);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, Grid, Collapse, Divider } from '@material-ui/core';\nimport QuizFormFlashcardsListRow from './QuizFormFlashcardsListRow';\nimport QuizFormFlashcardsEditRow from './QuizFormFlashcardsEditRow';\n\nconst QuizFormFlashcardsRow = ({ count, flashcard, handleSaveClick, handleDeleteClick }) => {\n  const [edit, setEdit] = useState(false);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => setShow(true), []);\n\n  const toggleEditMode = visible => {\n    setShow(false);\n    setTimeout(() => setEdit(visible), 300);\n    setTimeout(() => setShow(true), 300);\n  };\n\n  return (\n    <React.Fragment>\n      <Collapse in={show} unmountOnExit>\n        <ListItem>\n          <Grid container spacing={1} alignItems=\"center\">\n            {edit ? (\n              <QuizFormFlashcardsEditRow\n                flashcard={flashcard}\n                handleSaveClick={newFlashcard => {\n                  handleSaveClick(newFlashcard);\n                  toggleEditMode(false);\n                }}\n              />\n            ) : (\n              <QuizFormFlashcardsListRow\n                count={count}\n                flashcard={flashcard}\n                handleEditClick={() => {\n                  toggleEditMode(true);\n                }}\n                handleDeleteClick={() => {\n                  setShow(false);\n                  setTimeout(() => {\n                    handleDeleteClick();\n                  }, 300);\n                }}\n              />\n            )}\n          </Grid>\n        </ListItem>\n        <Divider />\n      </Collapse>\n    </React.Fragment>\n  );\n};\n\nQuizFormFlashcardsRow.propTypes = {\n  count: PropTypes.number.isRequired,\n  flashcard: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n  }).isRequired,\n  handleSaveClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default QuizFormFlashcardsRow;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as UUID } from 'uuid';\nimport { ListItem, TextField, Fab, Grid, withStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst styles = () => ({\n  root: {},\n  table: {},\n  textField: {\n    width: '100%',\n  },\n  button: {\n    marginLeft: 'auto',\n  },\n  input: {\n    width: '100%',\n  },\n});\n\nconst QuizFormFlashcardsAddRow = ({ classes, handleAddClick }) => {\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const questionInput = useRef(null);\n\n  const addNewFlashcard = () => {\n    if (newQuestion !== '' && newAnswer !== '') {\n      handleAddClick({ newId: UUID(), question: newQuestion, answer: newAnswer });\n      setNewQuestion('');\n      setNewAnswer('');\n      questionInput.current.focus();\n    }\n  };\n\n  return (\n    <ListItem>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <TextField\n            id=\"outlined-dense\"\n            inputRef={questionInput}\n            label=\"Add question\"\n            value={newQuestion}\n            onKeyPress={e => (e.key === 'Enter' ? addNewFlashcard() : '')}\n            onChange={e => setNewQuestion(e.target.value)}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs>\n          <TextField\n            id=\"outlined-dense\"\n            label=\"Add answer\"\n            value={newAnswer}\n            onKeyPress={e => (e.key === 'Enter' ? addNewFlashcard() : '')}\n            onChange={e => setNewAnswer(e.target.value)}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <Fab\n            size=\"medium\"\n            disabled={newQuestion === '' || newAnswer === ''}\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.button}\n            onClick={addNewFlashcard}\n          >\n            <Add />\n          </Fab>\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nQuizFormFlashcardsAddRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleAddClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuizFormFlashcardsAddRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Typography, ListItem, Grid, Paper, Divider } from '@material-ui/core';\nimport QuizFormFlashcardsRow from './QuizFormFlashcardsRow';\nimport QuizFormFlashcardsAddRow from './QuizFormFlashcardsAddRow';\n\nconst QuizFormFlashcards = ({ flashcards, setFlashcards }) => {\n  return (\n    <Paper>\n      <List>\n        <ListItem>\n          <Grid container spacing={1}>\n            <Grid item xs={1}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Nr.\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Question\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Answer\n              </Typography>\n            </Grid>\n          </Grid>\n        </ListItem>\n        <Divider />\n\n        {flashcards.map((flashcard, id) => (\n          <QuizFormFlashcardsRow\n            key={flashcard.newId || flashcard.id}\n            count={id + 1}\n            flashcard={flashcard}\n            handleSaveClick={newFlashcard => {\n              const newFlashcards = [...flashcards];\n              newFlashcards[id] = newFlashcard;\n              setFlashcards(newFlashcards);\n            }}\n            handleDeleteClick={() => {\n              const newFlashcards = [...flashcards];\n              newFlashcards.splice(id, 1);\n              setFlashcards(newFlashcards);\n            }}\n          />\n        ))}\n        <QuizFormFlashcardsAddRow\n          handleAddClick={flashcard => setFlashcards(flashcards.concat(flashcard))}\n        />\n      </List>\n    </Paper>\n  );\n};\n\nQuizFormFlashcards.propTypes = {\n  flashcards: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  setFlashcards: PropTypes.func.isRequired,\n};\n\nexport default QuizFormFlashcards;\n","export default Object.freeze({\n  TRIVIAL: 'Trivial',\n  EASY: 'Easy',\n  MEDIUM: 'Medium',\n  HARD: 'Hard',\n  IMPOSSIBLE: 'Impossible',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  withStyles,\n  ButtonBase,\n  withMobileDialog,\n  GridList,\n  GridListTile,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  text: {\n    marginBottom: theme.spacing(1),\n  },\n  image: {\n    width: '100%',\n  },\n});\n\nconst ImageDialog = ({ classes, open, setOpen, fullScreen, images, setImage }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"form-dialog-completion\"\n      fullScreen={fullScreen}\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"form-dialog-title\" style={{ textAlign: fullScreen ? 'center' : '' }}>\n        Choose a banner\n      </DialogTitle>\n      <DialogContent>\n        <GridList cellHeight={160} className={classes.gridList} cols={3}>\n          {Object.keys(images).map(image => (\n            <GridListTile key={image} cols={1}>\n              <ButtonBase\n                onClick={() => {\n                  setImage(image);\n                  setOpen(false);\n                }}\n              >\n                <img src={images[image]} alt={image} className={classes.image} />\n              </ButtonBase>\n            </GridListTile>\n          ))}\n        </GridList>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nImageDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  fullScreen: PropTypes.bool.isRequired,\n  images: PropTypes.object.isRequired,\n  setImage: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(withMobileDialog({ breakpoint: 'xs' })(ImageDialog));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextField,\n  withStyles,\n  List,\n  ListItem,\n  Card,\n  CardHeader,\n  Divider,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  ButtonBase,\n  Typography,\n} from '@material-ui/core';\nimport Difficulty from '../../misc/Difficulty';\nimport { importImages } from '../../misc/utils';\nimport ImageDialog from './ImageDialog';\n\nconst images = importImages();\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: theme.spacing(3),\n  },\n  headerAction: {\n    marginRight: theme.spacing(2),\n    marginTop: 0,\n  },\n  textField: {\n    width: '100%',\n  },\n  avatar: {\n    minWidth: '100px',\n    width: '10vw',\n    maxWidth: '200px',\n    marginRight: theme.spacing(2),\n    borderRadius: '4px',\n  },\n\n  avatarImage: {\n    width: '100%',\n    borderRadius: '4px',\n  },\n  avatarText: {\n    color: 'white',\n    position: 'absolute',\n    zIndex: 1,\n    textShadow: '0 0 100px black, 0 0 20px black',\n  },\n});\n\nconst QuizFormDetails = ({\n  classes,\n  cardTitle,\n  title,\n  setTitle,\n  description,\n  setDescription,\n  difficulty,\n  setDifficulty,\n  isPublic,\n  setIsPublic,\n  image,\n  setImage,\n}) => {\n  const [imageDialogOpen, setImageDialogOpen] = useState(false);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={cardTitle}\n        classes={{ action: classes.headerAction }}\n        action={\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isPublic}\n                onChange={e => setIsPublic(e.target.checked)}\n                value=\"visibility\"\n                color=\"primary\"\n              />\n            }\n            label=\"Public\"\n            labelPlacement=\"start\"\n          />\n        }\n      />\n      <Divider />\n\n      <List>\n        <ListItem>\n          <ButtonBase className={classes.avatar} onClick={() => setImageDialogOpen(true)}>\n            <img\n              aria-label=\"icon\"\n              src={images[image]}\n              className={classes.avatarImage}\n              alt={image}\n            />\n            <Typography variant=\"button\" className={classes.avatarText}>\n              Select image\n            </Typography>\n          </ButtonBase>\n          <TextField\n            id=\"input-title\"\n            label=\"Title\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            className={classes.textField}\n            variant=\"outlined\"\n          />\n        </ListItem>\n        <ImageDialog\n          open={imageDialogOpen}\n          setOpen={setImageDialogOpen}\n          images={images}\n          setImage={setImage}\n        />\n        <ListItem>\n          <TextField\n            id=\"input-description\"\n            label=\"Description\"\n            multiline\n            rows=\"8\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            className={classes.textField}\n            variant=\"outlined\"\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"select-difficulty\"\n            select\n            label=\"Difficulty\"\n            className={classes.textField}\n            value={difficulty}\n            onChange={e => setDifficulty(e.target.value)}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu,\n              },\n            }}\n            variant=\"outlined\"\n          >\n            {Object.values(Difficulty).map(diff => (\n              <MenuItem key={diff} value={diff}>\n                {diff}\n              </MenuItem>\n            ))}\n          </TextField>\n        </ListItem>\n      </List>\n    </Card>\n  );\n};\n\nQuizFormDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n  cardTitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  setDescription: PropTypes.func.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  setDifficulty: PropTypes.func.isRequired,\n  isPublic: PropTypes.bool.isRequired,\n  setIsPublic: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  setImage: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuizFormDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, Grid, CircularProgress } from '@material-ui/core';\nimport QuizFormFlashcards from './QuizFormFlashcards';\nimport QuizFormDetails from './QuizFormDetails';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grid: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  wrapper: {\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\nconst QuizForm = ({\n  classes,\n  flashcards,\n  setFlashcards,\n  title,\n  setTitle,\n  description,\n  setDescription,\n  difficulty,\n  setDifficulty,\n  isPublic,\n  setIsPublic,\n  image,\n  setImage,\n  saving,\n  submitText,\n  submitForm,\n  cardTitle,\n}) => {\n  const isValid = () => {\n    if (title.length === 0) {\n      return false;\n    }\n    if (description.length === 0) {\n      return false;\n    }\n    if (flashcards.length === 0) {\n      return false;\n    }\n    if (difficulty.length === 0) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className={classes.root}>\n      <QuizFormDetails\n        title={title}\n        setTitle={setTitle}\n        description={description}\n        setDescription={setDescription}\n        difficulty={difficulty}\n        setDifficulty={setDifficulty}\n        isPublic={isPublic}\n        setIsPublic={setIsPublic}\n        image={image}\n        setImage={setImage}\n        cardTitle={cardTitle}\n      />\n      <QuizFormFlashcards flashcards={flashcards} setFlashcards={setFlashcards} />\n      <Grid className={classes.grid} container spacing={1} justify=\"flex-end\">\n        <Grid item>\n          <div className={classes.wrapper}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              disabled={saving || !isValid()}\n              onClick={() => submitForm()}\n            >\n              {submitText}\n            </Button>\n\n            {saving && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nQuizForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  flashcards: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isPublic: PropTypes.bool.isRequired,\n  setFlashcards: PropTypes.func.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  setDescription: PropTypes.func.isRequired,\n  setDifficulty: PropTypes.func.isRequired,\n  setIsPublic: PropTypes.func.isRequired,\n  setImage: PropTypes.func.isRequired,\n  saving: PropTypes.bool.isRequired,\n  submitText: PropTypes.string.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  cardTitle: PropTypes.string.isRequired,\n};\nexport default withStyles(styles)(QuizForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withSnackbar } from 'notistack';\nimport { Grid } from '@material-ui/core';\nimport { createQuiz } from '../../../services/quizzes';\nimport QuizForm from '../../common/QuizForm';\n\nconst NewPageContent = ({ enqueueSnackbar, redirect }) => {\n  const [flashcards, setFlashcards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [image, setImage] = useState('mountains.jpg');\n  const [isPublic, setIsPublic] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  const clearFrom = () => {\n    setFlashcards([]);\n    setTitle('');\n    setDescription('');\n  };\n\n  const submitForm = async () => {\n    setSaving(true);\n    const result = await createQuiz({\n      title,\n      description,\n      difficulty,\n      isPublic,\n      image,\n      flashcards,\n    });\n    setSaving(false);\n    enqueueSnackbar(`Quiz \"${result.title}\" created`);\n    clearFrom();\n    redirect('/collections');\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10} xl={8}>\n        <QuizForm\n          flashcards={flashcards}\n          title={title}\n          description={description}\n          difficulty={difficulty}\n          isPublic={isPublic}\n          image={image}\n          setFlashcards={setFlashcards}\n          setTitle={setTitle}\n          setDescription={setDescription}\n          setDifficulty={setDifficulty}\n          setIsPublic={setIsPublic}\n          setImage={setImage}\n          saving={saving}\n          submitText=\"Create\"\n          submitForm={submitForm}\n          cardTitle=\"Create a new quiz\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nNewPageContent.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\nexport default withSnackbar(NewPageContent);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade, Grow } from '@material-ui/core';\nimport NewPageContent from './NewPageContent';\nimport FadeWrapperPage from '../../FadeWrapperPage';\n\nconst NewPage = ({ history }) => {\n  const [fetching, setFetching] = useState(false);\n\n  return (\n    <FadeWrapperPage\n      Component={NewPageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Grow}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      redirect={path => history.push(path)}\n    />\n  );\n};\n\nNewPage.propTypes = {\n  history: PropTypes.object.isRequired,\n};\nexport default NewPage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withSnackbar } from 'notistack';\nimport { Grid } from '@material-ui/core';\nimport { updateQuiz } from '../../../services/quizzes';\nimport QuizForm from '../../common/QuizForm';\n\nconst EditPageContent = ({ redirect, quiz, enqueueSnackbar }) => {\n  const [flashcards, setFlashcards] = useState(quiz.flashcards);\n  const [title, setTitle] = useState(quiz.title);\n  const [difficulty, setDifficulty] = useState(quiz.difficulty);\n  const [description, setDescription] = useState(quiz.description);\n  const [isPublic, setIsPublic] = useState(quiz.isPublic);\n  const [image, setImage] = useState(quiz.image);\n  const [saving, setSaving] = useState(false);\n\n  const submitForm = async () => {\n    setSaving(true);\n    const result = await updateQuiz(quiz.id, {\n      title,\n      description,\n      flashcards,\n      difficulty,\n      isPublic,\n      image,\n    });\n    enqueueSnackbar(`Quiz \"${result.title}\" updated`);\n    setSaving(false);\n    setTimeout(() => redirect('/collections'), 1000);\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10} lg={8} xl={6}>\n        <QuizForm\n          flashcards={flashcards}\n          title={title}\n          description={description}\n          difficulty={difficulty}\n          image={image}\n          isPublic={isPublic}\n          setFlashcards={setFlashcards}\n          setTitle={setTitle}\n          setDescription={setDescription}\n          setDifficulty={setDifficulty}\n          setIsPublic={setIsPublic}\n          setImage={setImage}\n          saving={saving}\n          submitText=\"Update\"\n          submitForm={submitForm}\n          cardTitle=\"Update a quiz\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nEditPageContent.propTypes = {\n  quiz: PropTypes.object.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\nexport default withSnackbar(EditPageContent);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grow, Fade } from '@material-ui/core';\nimport { getQuiz, getFlashcardsForQuiz } from '../../../services/quizzes';\nimport FadeWrapperPage from '../../FadeWrapperPage';\nimport EditPageContent from './EditPageContent';\n\nconst EditPage = ({ history, match }) => {\n  const [fetching, setFetching] = useState(true);\n  const [quiz, setQuiz] = useState({});\n\n  const fetchQuiz = async () => {\n    const result = await Promise.all([\n      getQuiz(match.params.id),\n      getFlashcardsForQuiz(match.params.id),\n    ]);\n    setQuiz({ ...result[0], flashcards: result[1] });\n    setFetching(false);\n  };\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n  return (\n    <FadeWrapperPage\n      Component={EditPageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Grow}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      redirect={path => history.push(path)}\n      quiz={quiz}\n    />\n  );\n};\n\nEditPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\nexport default EditPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography } from '@material-ui/core';\nimport { yellow } from '@material-ui/core/colors';\nimport { Star, StarHalf, StarBorder } from '@material-ui/icons';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  star: {\n    color: yellow[600],\n  },\n  text: {\n    marginLeft: theme.spacing(1),\n    paddingTop: '2px',\n  },\n});\n\nconst ViewRating = ({ classes, quiz: { rating, ratings } }) => {\n  const getFractionStarElement = () => {\n    const fraction = rating - Math.min(Math.trunc(rating), 4);\n    if (fraction < 0.25) {\n      return <StarBorder className={classes.star} fontSize=\"small\" />;\n    }\n    if (fraction < 0.75) {\n      return <StarHalf className={classes.star} fontSize=\"small\" />;\n    }\n    return <Star className={classes.star} fontSize=\"small\" />;\n  };\n  return (\n    <div className={classes.root}>\n      {[...Array(Math.min(Math.trunc(rating), 4))].map((v, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Star className={classes.star} key={i} fontSize=\"small\" />\n      ))}\n      {getFractionStarElement()}\n      {[...Array(Math.max(5 - Math.trunc(rating) - 1, 0))].map((v, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <StarBorder className={classes.star} key={i} fontSize=\"small\" />\n      ))}\n      <Typography variant=\"body2\" className={classes.text}>\n        {rating.toFixed(1)} ({ratings})\n      </Typography>\n    </div>\n  );\n};\n\nViewRating.propTypes = {\n  classes: PropTypes.object.isRequired,\n  quiz: PropTypes.shape({\n    rating: PropTypes.number.isRequired,\n    ratings: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(ViewRating);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography } from '@material-ui/core';\nimport {\n  Person,\n  Done,\n  SignalCellular0Bar,\n  SignalCellular1Bar,\n  SignalCellular2Bar,\n  SignalCellular3Bar,\n  SignalCellular4Bar,\n} from '@material-ui/icons';\nimport Difficulty from '../../misc/Difficulty';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: theme.spacing(2),\n  },\n  text: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ViewStatistics = ({ classes, quiz: { tries, successes, difficulty } }) => {\n  const getDifficultyIcon = () => {\n    switch (difficulty) {\n      case Difficulty.TRIVIAL:\n        return <SignalCellular0Bar />;\n      case Difficulty.EASY:\n        return <SignalCellular1Bar />;\n      case Difficulty.MEDIUM:\n        return <SignalCellular2Bar />;\n      case Difficulty.HARD:\n        return <SignalCellular3Bar />;\n      case Difficulty.IMPOSSIBLE:\n        return <SignalCellular4Bar />;\n      default:\n        return <SignalCellular0Bar />;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Person />\n      <Typography variant=\"body2\" className={classes.text}>\n        {tries}\n      </Typography>\n      <Done />\n      <Typography variant=\"body2\" className={classes.text}>\n        {successes}\n      </Typography>\n      {getDifficultyIcon()}\n      <Typography variant=\"body2\" className={classes.text}>\n        {difficulty}\n      </Typography>\n    </div>\n  );\n};\n\nViewStatistics.propTypes = {\n  classes: PropTypes.object.isRequired,\n  quiz: PropTypes.shape({\n    tries: PropTypes.number.isRequired,\n    successes: PropTypes.number.isRequired,\n    difficulty: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(ViewStatistics);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, Grid, Typography, withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  listItem: {\n    padding: 0,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n});\nconst ViewFlashcardsRow = ({ classes, count, question, answer, variant }) => {\n  return (\n    <ListItem className={classes.listItem}>\n      <Grid container spacing={1} alignItems=\"flex-start\">\n        <Grid item xs={1}>\n          <Typography variant={variant}>{count}</Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <Typography variant={variant}>{question}</Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography variant={variant}>{answer}</Typography>\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nViewFlashcardsRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired,\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  variant: PropTypes.string,\n};\n\nViewFlashcardsRow.defaultProps = {\n  variant: 'body2',\n};\n\nexport default withStyles(styles)(ViewFlashcardsRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, List } from '@material-ui/core';\nimport ViewFlashcardsListRow from './ViewFlashcardsListRow';\n\nconst ViewFlashcardsList = ({ flashcards }) => {\n  return (\n    <List>\n      <ViewFlashcardsListRow count=\"Nr.\" question=\"Question\" answer=\"Answer\" variant=\"subtitle2\" />\n      {flashcards.map((flashcard, id) => (\n        <React.Fragment key={flashcard.id}>\n          <Divider />\n          <ViewFlashcardsListRow\n            key={flashcard.id}\n            count={id + 1}\n            question={flashcard.question}\n            answer={flashcard.answer}\n          />\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n\nViewFlashcardsList.propTypes = {\n  flashcards: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default ViewFlashcardsList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, CardContent, Typography, Divider, Collapse } from '@material-ui/core';\nimport ViewFlashcardsList from './ViewFlashcardsList';\n\nconst styles = theme => ({\n  root: {},\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst ViewFlashcards = ({ classes, flashcards }) => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\">\n          Flashcards\n        </Typography>\n        <Typography gutterBottom variant=\"body2\">\n          Below is the list of all flashcards included in this quiz.\n        </Typography>\n        <Divider className={classes.divider} />\n        <Collapse in={show} timeout={300}>\n          <ViewFlashcardsList flashcards={flashcards} />\n        </Collapse>\n      </CardContent>\n    </div>\n  );\n};\n\nViewFlashcards.propTypes = {\n  classes: PropTypes.object.isRequired,\n  flashcards: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default withStyles(styles)(ViewFlashcards);\n","import React, { useState } from 'react';\nimport {\n  withStyles,\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  Divider,\n  Collapse,\n  CircularProgress,\n  Tooltip,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Public } from '@material-ui/icons';\nimport QuizCardMedia from '../../common/QuizCardMedia';\nimport ViewRating from '../../common/ViewRating';\nimport ViewStatistics from '../../common/ViewStatistics';\nimport ViewFlashcards from '../../common/ViewFlashcards';\nimport QuizCardActions from '../../common/QuizCardActions';\n\nconst styles = theme => ({\n  description: {\n    marginTop: theme.spacing(2),\n  },\n  progress: {\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n});\nconst ViewPageContent = ({ classes, quiz, fetchFlashcards, redirect }) => {\n  const [expanded, setExpanded] = useState(false);\n  const [fetching, setFetching] = useState(true);\n\n  const actions = [\n    {\n      name: 'Start',\n      color: 'primary',\n      variant: 'contained',\n      fullWidth: false,\n      size: 'large',\n      action: () => {\n        redirect(`/predict/${quiz.id}`);\n      },\n    },\n    {\n      name: 'Edit',\n      color: 'primary',\n      fullWidth: false,\n      size: 'large',\n      action: () => {\n        redirect(`/edit/${quiz.id}`);\n      },\n    },\n  ];\n\n  const toggleExpand = async () => {\n    setExpanded(!expanded);\n    if (quiz.flashcards === undefined || quiz.flashcards.length === 0) {\n      setFetching(true);\n      await fetchFlashcards(true);\n      setFetching(false);\n    }\n  };\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10} lg={8} xl={6}>\n        <Card>\n          <QuizCardMedia src={quiz.image} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\">\n              {quiz.title}{' '}\n              {quiz.isPublic ? (\n                <Tooltip title=\"Public\" placement=\"right\">\n                  <Public color=\"action\" />\n                </Tooltip>\n              ) : (\n                ''\n              )}\n            </Typography>\n            <ViewRating quiz={quiz} />\n            <ViewStatistics quiz={quiz} />\n            <Divider />\n            <Typography variant=\"body2\" className={classes.description}>\n              {quiz.description}\n            </Typography>\n          </CardContent>\n          <QuizCardActions actions={actions} expander={{ expanded, toggleExpand }} />\n          <Collapse in={expanded}>\n            <Divider />\n            {fetching ? (\n              <div className={classes.progress}>\n                <CircularProgress />\n              </div>\n            ) : (\n              <ViewFlashcards flashcards={quiz.flashcards} />\n            )}\n          </Collapse>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nViewPageContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  quiz: PropTypes.object.isRequired,\n  fetchFlashcards: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ViewPageContent);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade, Grow } from '@material-ui/core';\nimport { getQuiz, getRatingStatsForQuiz, getFlashcardsForQuiz } from '../../../services/quizzes';\nimport FadeWrapperPage from '../../FadeWrapperPage';\nimport ViewPageContent from './ViewPageContent';\nimport { importImage } from '../../../misc/utils';\n\nconst ViewPage = ({ history, match }) => {\n  const [fetching, setFetching] = useState(true);\n  const [quiz, setQuiz] = useState({});\n\n  const fetchQuiz = async () => {\n    const result = await Promise.all([\n      getQuiz(match.params.id),\n      getRatingStatsForQuiz(match.params.id, 'AVG'),\n      getRatingStatsForQuiz(match.params.id, 'COUNT'),\n    ]);\n    const imageSrc = await importImage(result[0].image);\n    setQuiz({\n      ...result[0],\n      rating: Number(result[1].value),\n      ratings: Number(result[2].value),\n      image: imageSrc,\n    });\n    setFetching(false);\n  };\n\n  const fetchFlashcards = async () => {\n    const result = await getFlashcardsForQuiz(match.params.id);\n    setQuiz(Object.assign({}, quiz, { flashcards: result }));\n  };\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n  return (\n    <FadeWrapperPage\n      Component={ViewPageContent}\n      ProgressTransition={Fade}\n      ContentTransition={Grow}\n      fetching={fetching}\n      setFetching={setFetching}\n      timeout={300}\n      redirect={path => history.push(path)}\n      fetchFlashcards={fetchFlashcards}\n      quiz={quiz}\n    />\n  );\n};\nViewPage.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n};\n\nexport default ViewPage;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Route, withRouter } from 'react-router-dom';\nimport PredictPage from './pages/PredictPage';\nimport CollectionsPage from './pages/CollectionsPage';\nimport ExplorePage from './pages/ExplorePage';\nimport NewPage from './pages/NewPage';\nimport EditPage from './pages/EditPage';\nimport ViewPage from './pages/ViewPage';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  root: {\n    width: '100%',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'auto',\n    flexGrow: 1,\n  },\n});\n\nconst Content = ({ classes }) => {\n  const contentRef = useRef(null);\n\n  return (\n    <main className={classes.root}>\n      <div className={classes.toolbar} />\n      <div className={classes.content} ref={contentRef}>\n        <Route exact path=\"/predict/:id\" component={PredictPage} />\n        <Route exact path=\"/new\" component={NewPage} />\n        <Route\n          exact\n          path=\"/collections\"\n          render={props => <CollectionsPage {...props} contentRef={contentRef} />}\n        />\n        <Route\n          exact\n          path=\"/explore\"\n          render={props => <ExplorePage {...props} contentRef={contentRef} />}\n        />\n        <Route exact path=\"/view/:id\" component={ViewPage} />\n        <Route exact path=\"/edit/:id\" component={EditPage} />\n      </div>\n    </main>\n  );\n};\n\nContent.propTypes = {\n  classes: PropTypes.shape(styles).isRequired,\n};\n\nexport default withRouter(withStyles(styles)(Content));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Navigation from './Navigation';\nimport Content from './Content';\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n};\n\nconst App = ({ classes }) => (\n  <div className={classes.root}>\n    <BrowserRouter>\n      <React.Fragment>\n        <Navigation />\n        <Content />\n      </React.Fragment>\n    </BrowserRouter>\n  </div>\n);\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { SnackbarProvider } from 'notistack';\nimport { Button } from '@material-ui/core';\nimport Theme from './misc/Theme';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = () => (\n  <MuiThemeProvider theme={Theme}>\n    <SnackbarProvider\n      maxSnack={3}\n      action={[\n        <Button key=\"dismiss\" color=\"secondary\" size=\"small\">\n          {'Dismiss'}\n        </Button>,\n      ]}\n    >\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </SnackbarProvider>\n  </MuiThemeProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}